{"id":"../../node_modules/lodash/trimEnd.js","dependencies":[{"name":"C:\\Users\\asus\\Documents\\belajar\\node js\\natours\\package.json","includedInParent":true,"mtime":1589981572014},{"name":"C:\\Users\\asus\\Documents\\belajar\\node js\\natours\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1589106526822},{"name":"./_baseToString","loc":{"line":1,"column":27},"parent":"C:\\Users\\asus\\Documents\\belajar\\node js\\natours\\node_modules\\lodash\\trimEnd.js","resolved":"C:\\Users\\asus\\Documents\\belajar\\node js\\natours\\node_modules\\lodash\\_baseToString.js"},{"name":"./_castSlice","loc":{"line":2,"column":24},"parent":"C:\\Users\\asus\\Documents\\belajar\\node js\\natours\\node_modules\\lodash\\trimEnd.js","resolved":"C:\\Users\\asus\\Documents\\belajar\\node js\\natours\\node_modules\\lodash\\_castSlice.js"},{"name":"./_charsEndIndex","loc":{"line":3,"column":28},"parent":"C:\\Users\\asus\\Documents\\belajar\\node js\\natours\\node_modules\\lodash\\trimEnd.js","resolved":"C:\\Users\\asus\\Documents\\belajar\\node js\\natours\\node_modules\\lodash\\_charsEndIndex.js"},{"name":"./_stringToArray","loc":{"line":4,"column":28},"parent":"C:\\Users\\asus\\Documents\\belajar\\node js\\natours\\node_modules\\lodash\\trimEnd.js","resolved":"C:\\Users\\asus\\Documents\\belajar\\node js\\natours\\node_modules\\lodash\\_stringToArray.js"},{"name":"./toString","loc":{"line":5,"column":23},"parent":"C:\\Users\\asus\\Documents\\belajar\\node js\\natours\\node_modules\\lodash\\trimEnd.js","resolved":"C:\\Users\\asus\\Documents\\belajar\\node js\\natours\\node_modules\\lodash\\toString.js"}],"generated":{"js":"var baseToString = require('./_baseToString'),\n    castSlice = require('./_castSlice'),\n    charsEndIndex = require('./_charsEndIndex'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/** Used to match leading and trailing whitespace. */\nvar reTrimEnd = /\\s+$/;\n\n/**\n * Removes trailing whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trimEnd('  abc  ');\n * // => '  abc'\n *\n * _.trimEnd('-_-abc-_-', '_-');\n * // => '-_-abc'\n */\nfunction trimEnd(string, chars, guard) {\n  string = toString(string);\n  if (string && (guard || chars === undefined)) {\n    return string.replace(reTrimEnd, '');\n  }\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray(string),\n      end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n  return castSlice(strSymbols, 0, end).join('');\n}\n\nmodule.exports = trimEnd;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/lodash/trimEnd.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}}],"sources":{"../../node_modules/lodash/trimEnd.js":"var baseToString = require('./_baseToString'),\n    castSlice = require('./_castSlice'),\n    charsEndIndex = require('./_charsEndIndex'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/** Used to match leading and trailing whitespace. */\nvar reTrimEnd = /\\s+$/;\n\n/**\n * Removes trailing whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trimEnd('  abc  ');\n * // => '  abc'\n *\n * _.trimEnd('-_-abc-_-', '_-');\n * // => '-_-abc'\n */\nfunction trimEnd(string, chars, guard) {\n  string = toString(string);\n  if (string && (guard || chars === undefined)) {\n    return string.replace(reTrimEnd, '');\n  }\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray(string),\n      end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n  return castSlice(strSymbols, 0, end).join('');\n}\n\nmodule.exports = trimEnd;\n"},"lineCount":44}},"error":null,"hash":"3c2798dffac2f8242079be078fe8fe9b","cacheData":{"env":{}}}